[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Rucky\SenseCapIndicator\SenseCAP_Indicator_ESP32\examples\squareline_demo\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Rucky/SenseCapIndicator/SenseCAP_Indicator_ESP32/examples/squareline_demo/build/bootloader/bootloader.bin"
Bootloader binary size 0x57d0 bytes. 0x2830 bytes (31%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/ui/screens/ui_Water_Level_Sensor_and_buttons.c.obj
[3/7] Linking C static library esp-idf\main\libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable squareline_demo.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/Rucky/SenseCapIndicator/SenseCAP_Indicator_ESP32/examples/squareline_demo/build/squareline_demo.bin
[7/7] cmd.exe /C "cd /D C:\Users\Rucky\SenseCapIndicator\SenseCAP_Indicator_ESP32\examples\squareline_demo\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Rucky/SenseCapIndicator/SenseCAP_Indicator_ESP32/examples/squareline_demo/build/partition_table/partition-table.bin C:/Users/Rucky/SenseCapIndicator/SenseCAP_Indicator_ESP32/examples/squareline_demo/build/squareline_demo.bin"
squareline_demo.bin binary size 0x91650 bytes. Smallest app partition is 0x400000 bytes. 0x36e9b0 bytes (86%) free.
